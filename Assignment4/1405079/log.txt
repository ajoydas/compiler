Line 1: type_specifier : INT 

Line 1: declaration_list : ID
x

Line 1: var_declaration	: type_specifier declaration_list SEMICOLON

Line 1: unit : var_declaration

Line 1: program : unit

Line 3: type_specifier : INT 

Line 4: type_specifier : INT 

Line 4: declaration_list : ID
y

Line 4: var_declaration	: type_specifier declaration_list SEMICOLON

Line 4: statement  : var_declaration

Line 4: statements : statement

Line 5: variable : ID
y

Line 5: factor : CONST_INT
10

Line 5: unary_expression : factor

Line 5: term : unary_expression

Line 5: simple_expression : term

Line 5: rel_expression : simple_expression

Line 5: logic_expression : rel_expression

Line 5: expression : variable ASSINOP logic_expression

ScopeTable # 2
1 -->  < y, int , -10000000 >

ScopeTable # 1
1 -->  < main, function >
6 -->  < x, int , -10000000 >

Line 5: expression_statement	: expression SEMICOLON

Line 5: statement : expression_statement

Line 5: statements : statements statement

Line 6: type_specifier : INT 

Line 6: declaration_list : ID
z

Line 6: var_declaration	: type_specifier declaration_list SEMICOLON

Line 6: statement  : var_declaration

Line 6: statements : statements statement

Line 7: variable : ID
z

Line 7: variable : ID
y

Line 7: factor : variable

Line 7: unary_expression : factor

Line 7: term : unary_expression

Line 7: simple_expression : term

Line 7: rel_expression : simple_expression

Line 7: logic_expression : rel_expression

Line 7: expression : variable ASSINOP logic_expression

ScopeTable # 2
1 -->  < y, int , -10000000 >
6 -->  < z, int , -10000000 >

ScopeTable # 1
1 -->  < main, function >
6 -->  < x, int , -10000000 >

Line 7: expression_statement	: expression SEMICOLON

Line 7: statement : expression_statement

Line 7: statements : statements statement

Line 8: type_specifier : INT 

Line 8: declaration_list : ID LTHIRD CONST_INT RTHIRD
a
1

Line 8: var_declaration	: type_specifier declaration_list SEMICOLON

Line 8: statement  : var_declaration

Line 8: statements : statements statement

Line 9: factor : CONST_INT
0

Line 9: unary_expression : factor

Line 9: term : unary_expression

Line 9: simple_expression : term

Line 9: rel_expression : simple_expression

Line 9: logic_expression : rel_expression

Line 9: expression : logic_expression

Line 9: variable : ID LTHIRD expression RTHIRD
a

Line 9: factor : CONST_INT
4

Line 9: unary_expression : factor

Line 9: term : unary_expression

Line 9: simple_expression : term

Line 9: rel_expression : simple_expression

Line 9: logic_expression : rel_expression

Line 9: expression : variable ASSINOP logic_expression

ScopeTable # 2
1 -->  < y, int , -10000000 >
5 -->  < a, int ,{ -10000000 }>
6 -->  < z, int , -10000000 >

ScopeTable # 1
1 -->  < main, function >
6 -->  < x, int , -10000000 >

Line 9: expression_statement	: expression SEMICOLON

Line 9: statement : expression_statement

Line 9: statements : statements statement

Line 10: type_specifier : INT 

Line 10: declaration_list : ID
b

Line 10: var_declaration	: type_specifier declaration_list SEMICOLON

Line 10: statement  : var_declaration

Line 10: statements : statements statement

Line 11: variable : ID
b

Line 11: factor : CONST_INT
0

Line 11: unary_expression : factor

Line 11: term : unary_expression

Line 11: simple_expression : term

Line 11: rel_expression : simple_expression

Line 11: logic_expression : rel_expression

Line 11: expression : logic_expression

Line 11: variable : ID LTHIRD expression RTHIRD
a

Line 11: factor : variable

Line 11: unary_expression : factor

Line 11: term : unary_expression

Line 11: simple_expression : term

Line 11: rel_expression : simple_expression

Line 11: logic_expression : rel_expression

Line 11: expression : variable ASSINOP logic_expression

ScopeTable # 2
0 -->  < b, int , -10000000 >
1 -->  < y, int , -10000000 >
5 -->  < a, int ,{ -10000000 }>
6 -->  < z, int , -10000000 >

ScopeTable # 1
1 -->  < main, function >
6 -->  < x, int , -10000000 >

Line 11: expression_statement	: expression SEMICOLON

Line 11: statement : expression_statement

Line 11: statements : statements statement

Line 12: factor : CONST_INT
0

Line 12: unary_expression : factor

Line 12: term : unary_expression

Line 12: simple_expression : term

Line 12: rel_expression : simple_expression

Line 12: logic_expression : rel_expression

Line 12: expression : logic_expression

Line 12: statement : RETURN expression SEMICOLON 

Line 12: statements : statements statement

Line 13: compound_statement : LCURL statements RCURL

ScopeTable # 2
0 -->  < b, int , -10000000 >
1 -->  < y, int , -10000000 >
5 -->  < a, int ,{ -10000000 }>
6 -->  < z, int , -10000000 >

ScopeTable # 1
1 -->  < main, function >
6 -->  < x, int , -10000000 >

Line 13: func_definition : type_specifier ID LPAREN RPAREN compound_statement
main

Line 13: unit : func_definition

Line 13: program : program unit

Total Lines: 14

Total Errors: 0

