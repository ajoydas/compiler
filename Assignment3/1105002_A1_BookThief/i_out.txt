identifier_list--> ID
declarations-->    
identifier_list--> ID
identifier_list-->COMMA  ID
identifier_list-->COMMA  ID
standard_type-->  INTEGER
type--->standard_type
declarations-->   declarations VAR identifier_list COLON type SEMICOLON 
subprogram_declarations--> 
identifier_list--> ID
standard_type-->  REAL
type-->ARRAY BRACKET1 NUM DOTDOT NUM BRACKET2 OF standard_type
parameter_list--->identifier_list COLON type
arguments --> PAREN1 parameter_list PAREN2
subprogram_head-->PROCEDURE ID arguments SEMICOLON
declarations-->    
factor-->ID 
term-->factor
simple_expression -->term
expression: simple_expression
expression_list:	expression
procedure_statement --> ID PAREN1 expression_list PAREN2
statement--> procedure_statement
statement_list--> statement
optional_statements--> statement_list
compound_statement-->	BEGIN optional_statements END
subprogram_declaration-->subprogram_head declarations compound_statement
subprogram_declarations-->subprogram_declarations subprogram_declaration SEMICOLON
identifier_list--> ID
identifier_list-->COMMA  ID
standard_type-->  REAL
type--->standard_type
parameter_list--->identifier_list COLON type
arguments --> PAREN1 parameter_list PAREN2
standard_type-->  REAL
subprogram_head-->FUNCTION ID arguments COLON standard_type SEMICOLON
declarations-->    
factor-->ID 
term-->factor
simple_expression -->term
expression: simple_expression
expression_list:	expression
factor-->ID 
term-->factor
simple_expression -->term
expression: simple_expression
expression_list: expression_list COMMA expression
procedure_statement --> ID PAREN1 expression_list PAREN2
statement--> procedure_statement
statement_list--> statement
optional_statements--> statement_list
compound_statement-->	BEGIN optional_statements END
subprogram_declaration-->subprogram_head declarations compound_statement
subprogram_declarations-->subprogram_declarations subprogram_declaration SEMICOLON
variable-->   ID
3
factor-->NUM
term-->factor
simple_expression -->term
7
factor-->NUM
term-->factor
simple_expression --> simple_expression ADDOP term 
expression: simple_expression
factor --> PAREN1 expression PAREN2
term-->factor
simple_expression -->term
expression: simple_expression
statement--> variable ASSIGNOP expression
statement_list--> statement
variable-->   ID
factor-->ID 
term-->factor
simple_expression -->term
5
factor-->NUM
term-->factor
simple_expression --> simple_expression ADDOP term 
expression: simple_expression
statement--> variable ASSIGNOP expression
statement_list--> statement_list SEMICOLON statement
variable-->   ID
factor-->ID 
term-->factor
factor-->ID 
simple_expression -->term
expression: simple_expression
statement--> variable ASSIGNOP expression
statement_list--> statement_list SEMICOLON statement
optional_statements--> statement_list
compound_statement-->	BEGIN optional_statements END
program:    PROGRAM ID PAREN1 identifier_list PAREN2 SEMICOLON declarations subprogram_declarations compound_statement
[2]  -->  <1 , NUM , 1>
[3]  -->  <a , ID , 0>
[4]  -->  <10 , NUM , 10>  -->  <b , ID , 0>  -->  <3 , NUM , 3>
[5]  -->  <hello , ID , 0>  -->  <c , ID , 0>
[6]  -->  <5 , NUM , 5>
[7]  -->  <temp5 , temp , 150>
[8]  -->  <7 , NUM , 7>
[11]  -->  <i , ID , 10>
[12]  -->  <j , ID , 15>
[13]  -->  <k , ID , 150>
[14]  -->  <output , ID , 0>  -->  <temp0 , temp , 10>
[15]  -->  <temp6 , temp , 0>
[22]  -->  <temp1 , temp , 0>
[30]  -->  <temp2 , temp , 0>
[33]  -->  <print , ID , 0>
[34]  -->  <modexample , ID , 0>
[38]  -->  <foo , ID , 0>  -->  <temp3 , temp , 15>
[42]  -->  <* , MULOP , 0>
[43]  -->  <+ , ADDOP , 0>
[46]  -->  <temp4 , temp , 0>
