Terminals unused in grammar

   DO
   SWITCH
   DEFAULT
   BREAK
   CASE
   CONTINUE
   SINGLECOM
   MULTICOM


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit
    4        | error unit

    5 unit: var_declaration
    6     | func_declaration
    7     | func_definition

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON

    9 $@1: %empty

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 parameter_list: parameter_list COMMA type_specifier ID
   12               | parameter_list COMMA type_specifier
   13               | type_specifier ID
   14               | type_specifier
   15               | %empty

   16 $@2: %empty

   17 compound_statement: LCURL $@2 statements RCURL

   18 $@3: %empty

   19 compound_statement: LCURL $@3 RCURL

   20 var_declaration: type_specifier declaration_list SEMICOLON

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA ID
   25                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   26                 | ID
   27                 | ID LTHIRD CONST_INT RTHIRD

   28 statements: statement
   29           | statements statement

   30 statement: var_declaration
   31          | expression_statement
   32          | compound_statement
   33          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement ELSE statement
   36          | WHILE LPAREN expression RPAREN statement
   37          | PRINTLN LPAREN ID RPAREN SEMICOLON
   38          | RETURN expression SEMICOLON
   39          | error SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: ID
   43         | ID LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSINOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: ADDOP unary_expression
   55                 | NOT unary_expression
   56                 | factor

   57 factor: variable
   58       | ID LPAREN argument_list RPAREN
   59       | LPAREN expression RPAREN
   60       | CONST_INT
   61       | CONST_FLOAT
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | %empty

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 4 39
IF (258) 34 35
FOR (259) 33
DO (260)
INT (261) 21
FLOAT (262) 22
VOID (263) 23
SWITCH (264)
DEFAULT (265)
ELSE (266) 35
WHILE (267) 36
BREAK (268)
RETURN (269) 38
CASE (270)
CONTINUE (271)
PRINTLN (272) 37
CONST_INT (273) 25 27 60
CONST_FLOAT (274) 61
ID (275) 8 10 11 13 24 25 26 27 37 42 43 58
ADDOP (276) 51 54
MULOP (277) 53
INCOP (278) 62
DECOP (279) 63
RELOP (280) 49
ASSINOP (281) 45
LOGICOP (282) 47
NOT (283) 55
LPAREN (284) 8 10 33 34 35 36 37 58 59
RPAREN (285) 8 10 33 34 35 36 37 58 59
LCURL (286) 17 19
RCURL (287) 17 19
LTHIRD (288) 25 27 43
RTHIRD (289) 25 27 43
COMMA (290) 11 12 24 25 66
SEMICOLON (291) 8 20 37 38 39 40 41
SINGLECOM (292)
MULTICOM (293)
only_if (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3 4, on right: 1 2
unit (43)
    on left: 5 6 7, on right: 2 3 4
func_declaration (44)
    on left: 8, on right: 6
func_definition (45)
    on left: 10, on right: 7
$@1 (46)
    on left: 9, on right: 10
parameter_list (47)
    on left: 11 12 13 14 15, on right: 8 10 11 12
compound_statement (48)
    on left: 17 19, on right: 10 32
$@2 (49)
    on left: 16, on right: 17
$@3 (50)
    on left: 18, on right: 19
var_declaration (51)
    on left: 20, on right: 5 30
type_specifier (52)
    on left: 21 22 23, on right: 8 10 11 12 13 14 20
declaration_list (53)
    on left: 24 25 26 27, on right: 20 24 25
statements (54)
    on left: 28 29, on right: 17 29
statement (55)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 28 29 33 34 35
    36
expression_statement (56)
    on left: 40 41, on right: 31 33
variable (57)
    on left: 42 43, on right: 45 57 62 63
expression (58)
    on left: 44 45, on right: 33 34 35 36 38 41 43 59
logic_expression (59)
    on left: 46 47, on right: 44 45 66 67
rel_expression (60)
    on left: 48 49, on right: 46 47
simple_expression (61)
    on left: 50 51, on right: 48 49 51
term (62)
    on left: 52 53, on right: 50 51 53
unary_expression (63)
    on left: 54 55 56, on right: 52 53 54 55
factor (64)
    on left: 57 58 59 60 61 62 63, on right: 56
argument_list (65)
    on left: 64 65, on right: 58
arguments (66)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    start             go to state 5
    program           go to state 6
    unit              go to state 7
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 1

    4 program: error . unit

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    unit              go to state 12
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 2

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


State 4

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


State 5

    0 $accept: start . $end

    $end  shift, and go to state 13


State 6

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 1 (start)

    unit              go to state 14
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 7

    3 program: unit .

    $default  reduce using rule 3 (program)


State 8

    6 unit: func_declaration .

    $default  reduce using rule 6 (unit)


State 9

    7 unit: func_definition .

    $default  reduce using rule 7 (unit)


State 10

    5 unit: var_declaration .

    $default  reduce using rule 5 (unit)


State 11

    8 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   20 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 15

    declaration_list  go to state 16


State 12

    4 program: error unit .

    $default  reduce using rule 4 (program)


State 13

    0 $accept: start $end .

    $default  accept


State 14

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 15

    8 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 17
    LTHIRD  shift, and go to state 18

    $default  reduce using rule 26 (declaration_list)


State 16

   20 var_declaration: type_specifier declaration_list . SEMICOLON
   24 declaration_list: declaration_list . COMMA ID
   25                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 17

    8 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 15 (parameter_list)

    parameter_list  go to state 21
    type_specifier  go to state 22


State 18

   27 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 19

   24 declaration_list: declaration_list COMMA . ID
   25                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 24


State 20

   20 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 20 (var_declaration)


State 21

    8 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier ID
   12               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 25
    COMMA   shift, and go to state 26


State 22

   13 parameter_list: type_specifier . ID
   14               | type_specifier .

    ID  shift, and go to state 27

    $default  reduce using rule 14 (parameter_list)


State 23

   27 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 28


State 24

   24 declaration_list: declaration_list COMMA ID .
   25                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 29

    $default  reduce using rule 24 (declaration_list)


State 25

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 9 ($@1)

    $@1  go to state 31


State 26

   11 parameter_list: parameter_list COMMA . type_specifier ID
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    type_specifier  go to state 32


State 27

   13 parameter_list: type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 28

   27 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 29

   25 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 33


State 30

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 31

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 34

    compound_statement  go to state 35


State 32

   11 parameter_list: parameter_list COMMA type_specifier . ID
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 36

    $default  reduce using rule 12 (parameter_list)


State 33

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 37


State 34

   17 compound_statement: LCURL . $@2 statements RCURL
   19                   | LCURL . $@3 RCURL

    RCURL     reduce using rule 18 ($@3)
    $default  reduce using rule 16 ($@2)

    $@2  go to state 38
    $@3  go to state 39


State 35

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 10 (func_definition)


State 36

   11 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 37

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 38

   17 compound_statement: LCURL $@2 . statements RCURL

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statements            go to state 56
    statement             go to state 57
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 39

   19 compound_statement: LCURL $@3 . RCURL

    RCURL  shift, and go to state 67


State 40

   39 statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 41

   34 statement: IF . LPAREN expression RPAREN statement
   35          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 69


State 42

   33 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 70


State 43

   36 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 71


State 44

   38 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 72
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 45

   37 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 73


State 46

   60 factor: CONST_INT .

    $default  reduce using rule 60 (factor)


State 47

   61 factor: CONST_FLOAT .

    $default  reduce using rule 61 (factor)


State 48

   42 variable: ID .
   43         | ID . LTHIRD expression RTHIRD
   58 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 74
    LTHIRD  shift, and go to state 75

    $default  reduce using rule 42 (variable)


State 49

   54 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable          go to state 76
    unary_expression  go to state 77
    factor            go to state 66


State 50

   55 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable          go to state 76
    unary_expression  go to state 78
    factor            go to state 66


State 51

   59 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 79
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 52

   40 expression_statement: SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 53

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


State 54

   30 statement: var_declaration .

    $default  reduce using rule 30 (statement)


State 55

   20 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 80

    declaration_list  go to state 16


State 56

   17 compound_statement: LCURL $@2 statements . RCURL
   29 statements: statements . statement

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    RCURL        shift, and go to state 81
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statement             go to state 82
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 57

   28 statements: statement .

    $default  reduce using rule 28 (statements)


State 58

   31 statement: expression_statement .

    $default  reduce using rule 31 (statement)


State 59

   45 expression: variable . ASSINOP logic_expression
   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP    shift, and go to state 83
    DECOP    shift, and go to state 84
    ASSINOP  shift, and go to state 85

    $default  reduce using rule 57 (factor)


State 60

   41 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 61

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


State 62

   46 logic_expression: rel_expression .
   47                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 87

    $default  reduce using rule 46 (logic_expression)


State 63

   48 rel_expression: simple_expression .
   49               | simple_expression . RELOP simple_expression
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88
    RELOP  shift, and go to state 89

    $default  reduce using rule 48 (rel_expression)


State 64

   50 simple_expression: term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 50 (simple_expression)


State 65

   52 term: unary_expression .

    $default  reduce using rule 52 (term)


State 66

   56 unary_expression: factor .

    $default  reduce using rule 56 (unary_expression)


State 67

   19 compound_statement: LCURL $@3 RCURL .

    $default  reduce using rule 19 (compound_statement)


State 68

   39 statement: error SEMICOLON .

    $default  reduce using rule 39 (statement)


State 69

   34 statement: IF LPAREN . expression RPAREN statement
   35          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 91
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 70

   33 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    SEMICOLON    shift, and go to state 52

    expression_statement  go to state 92
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 71

   36 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 93
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 72

   38 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 73

   37 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 95


State 74

   58 factor: ID LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    $default  reduce using rule 65 (argument_list)

    variable           go to state 76
    logic_expression   go to state 96
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66
    argument_list      go to state 97
    arguments          go to state 98


State 75

   43 variable: ID LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 99
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 76

   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP  shift, and go to state 83
    DECOP  shift, and go to state 84

    $default  reduce using rule 57 (factor)


State 77

   54 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 78

   55 unary_expression: NOT unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 79

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 100


State 80

   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 18

    $default  reduce using rule 26 (declaration_list)


State 81

   17 compound_statement: LCURL $@2 statements RCURL .

    $default  reduce using rule 17 (compound_statement)


State 82

   29 statements: statements statement .

    $default  reduce using rule 29 (statements)


State 83

   62 factor: variable INCOP .

    $default  reduce using rule 62 (factor)


State 84

   63 factor: variable DECOP .

    $default  reduce using rule 63 (factor)


State 85

   45 expression: variable ASSINOP . logic_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 76
    logic_expression   go to state 101
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 86

   41 expression_statement: expression SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 87

   47 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 76
    rel_expression     go to state 102
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 88

   51 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable          go to state 76
    term              go to state 103
    unary_expression  go to state 65
    factor            go to state 66


State 89

   49 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 76
    simple_expression  go to state 104
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 90

   53 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable          go to state 76
    unary_expression  go to state 105
    factor            go to state 66


State 91

   34 statement: IF LPAREN expression . RPAREN statement
   35          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 92

   33 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    SEMICOLON    shift, and go to state 52

    expression_statement  go to state 107
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 93

   36 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 94

   38 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 38 (statement)


State 95

   37 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 109


State 96

   67 arguments: logic_expression .

    $default  reduce using rule 67 (arguments)


State 97

   58 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 110


State 98

   64 argument_list: arguments .
   66 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 111

    $default  reduce using rule 64 (argument_list)


State 99

   43 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 112


State 100

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


State 101

   45 expression: variable ASSINOP logic_expression .

    $default  reduce using rule 45 (expression)


State 102

   47 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 47 (logic_expression)


State 103

   51 simple_expression: simple_expression ADDOP term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 51 (simple_expression)


State 104

   49 rel_expression: simple_expression RELOP simple_expression .
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88

    $default  reduce using rule 49 (rel_expression)


State 105

   53 term: term MULOP unary_expression .

    $default  reduce using rule 53 (term)


State 106

   34 statement: IF LPAREN expression RPAREN . statement
   35          | IF LPAREN expression RPAREN . statement ELSE statement

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statement             go to state 113
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 107

   33 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 59
    expression         go to state 114
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 108

   36 statement: WHILE LPAREN expression RPAREN . statement

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statement             go to state 115
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 109

   37 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 110

   58 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 58 (factor)


State 111

   66 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51

    variable           go to state 76
    logic_expression   go to state 117
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 112

   43 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 43 (variable)


State 113

   34 statement: IF LPAREN expression RPAREN statement .
   35          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 118

    $default  reduce using rule 34 (statement)


State 114

   33 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 119


State 115

   36 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 36 (statement)


State 116

   37 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 37 (statement)


State 117

   66 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 66 (arguments)


State 118

   35 statement: IF LPAREN expression RPAREN statement ELSE . statement

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statement             go to state 120
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 119

   33 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    error        shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    ADDOP        shift, and go to state 49
    NOT          shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 52

    compound_statement    go to state 53
    var_declaration       go to state 54
    type_specifier        go to state 55
    statement             go to state 121
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 120

   35 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 35 (statement)


State 121

   33 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 33 (statement)
