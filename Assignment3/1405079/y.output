Terminals unused in grammar

   IF
   FOR
   DO
   SWITCH
   DEFAULT
   ELSE
   WHILE
   BREAK
   RETURN
   CASE
   CONTINUE
   PRINTLN
   CONST_INT
   CONST_FLOAT
   CONST_CHAR
   ADDOP
   MULOP
   INCOP
   DECOP
   RELOP
   ASSINOP
   LOGICOP
   NOT
   LTHIRD
   RTHIRD
   SINGLECOM
   MULTICOM


Rules useless in parser due to conflicts

   13 $@1: %empty


State 19 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: func_declaration
    5     | func_definition

    6 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement

    8 parameter_list: parameter_list COMMA type_specifier ID
    9               | parameter_list COMMA type_specifier
   10               | type_specifier ID
   11               | type_specifier
   12               | %empty

   13 $@1: %empty

   14 compound_statement: LCURL $@1 statements RCURL
   15                   | LCURL RCURL

   16 type_specifier: INT
   17               | FLOAT
   18               | VOID

   19 statements: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258)
FOR (259)
DO (260)
INT (261) 16
FLOAT (262) 17
VOID (263) 18
SWITCH (264)
DEFAULT (265)
ELSE (266)
WHILE (267)
BREAK (268)
RETURN (269)
CASE (270)
CONTINUE (271)
PRINTLN (272)
CONST_INT (273)
CONST_FLOAT (274)
CONST_CHAR (275)
ID (276) 6 7 8 10
ADDOP (277)
MULOP (278)
INCOP (279)
DECOP (280)
RELOP (281)
ASSINOP (282)
LOGICOP (283)
NOT (284)
LPAREN (285) 6 7
RPAREN (286) 6 7
LCURL (287) 14 15
RCURL (288) 14 15
LTHIRD (289)
RTHIRD (290)
COMMA (291) 8 9
SEMICOLON (292) 6
SINGLECOM (293)
MULTICOM (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5, on right: 2 3
func_declaration (44)
    on left: 6, on right: 4
func_definition (45)
    on left: 7, on right: 5
parameter_list (46)
    on left: 8 9 10 11 12, on right: 6 7 8 9
compound_statement (47)
    on left: 14 15, on right: 7
$@1 (48)
    on left: 13, on right: 14
type_specifier (49)
    on left: 16 17 18, on right: 6 7 8 9 10 11
statements (50)
    on left: 19, on right: 14


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    type_specifier    go to state 9


State 1

   16 type_specifier: INT .

    $default  reduce using rule 16 (type_specifier)


State 2

   17 type_specifier: FLOAT .

    $default  reduce using rule 17 (type_specifier)


State 3

   18 type_specifier: VOID .

    $default  reduce using rule 18 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 10


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 11
    func_declaration  go to state 7
    func_definition   go to state 8
    type_specifier    go to state 9


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    4 unit: func_declaration .

    $default  reduce using rule 4 (unit)


State 8

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


State 9

    6 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    7 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement

    ID  shift, and go to state 12


State 10

    0 $accept: start $end .

    $default  accept


State 11

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 12

    6 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    7 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement

    LPAREN  shift, and go to state 13


State 13

    6 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    7 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 12 (parameter_list)

    parameter_list  go to state 14
    type_specifier  go to state 15


State 14

    6 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    7 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
    8 parameter_list: parameter_list . COMMA type_specifier ID
    9               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 16
    COMMA   shift, and go to state 17


State 15

   10 parameter_list: type_specifier . ID
   11               | type_specifier .

    ID  shift, and go to state 18

    $default  reduce using rule 11 (parameter_list)


State 16

    6 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 19
    SEMICOLON  shift, and go to state 20

    compound_statement  go to state 21


State 17

    8 parameter_list: parameter_list COMMA . type_specifier ID
    9               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 22


State 18

   10 parameter_list: type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


State 19

   14 compound_statement: LCURL . $@1 statements RCURL
   15                   | LCURL . RCURL

    RCURL  shift, and go to state 23

    RCURL  [reduce using rule 13 ($@1)]

    $@1  go to state 24


State 20

    6 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 6 (func_declaration)


State 21

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 7 (func_definition)


State 22

    8 parameter_list: parameter_list COMMA type_specifier . ID
    9               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 25

    $default  reduce using rule 9 (parameter_list)


State 23

   15 compound_statement: LCURL RCURL .

    $default  reduce using rule 15 (compound_statement)


State 24

   14 compound_statement: LCURL $@1 . statements RCURL

    $default  reduce using rule 19 (statements)

    statements  go to state 26


State 25

    8 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 8 (parameter_list)


State 26

   14 compound_statement: LCURL $@1 statements . RCURL

    RCURL  shift, and go to state 27


State 27

   14 compound_statement: LCURL $@1 statements RCURL .

    $default  reduce using rule 14 (compound_statement)
