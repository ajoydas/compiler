Line no 1: TOKEN <INT> Lexeme int found

Line no 1: TOKEN <ID> Lexeme main found

ScopeTable # 1
1 -->  < main, ID> 

Line no 1: TOKEN <LPAREN> Lexeme ( found

Line no 1: TOKEN <RPAREN> Lexeme ) found

Line no 1: TOKEN <LCURL> Lexeme { found

Line no 2: TOKEN <INT> Lexeme int found

Line no 2: TOKEN <ID> Lexeme a found

ScopeTable # 1
1 -->  < main, ID> 
5 -->  < a, ID> 

Line no 2: TOKEN <COMMA> Lexeme , found

Line no 2: TOKEN <ID> Lexeme b found

ScopeTable # 1
0 -->  < b, ID> 
1 -->  < main, ID> 
5 -->  < a, ID> 

Line no 2: TOKEN <SEMICOLON> Lexeme ; found

Line no 3: TOKEN <ID> Lexeme a found

Line no 3: TOKEN <ASSINOP> Lexeme = found

Line no 3: TOKEN <ID> Lexeme a found

Line no 3: TOKEN <ADDOP> Lexeme + found

Line no 3: TOKEN <CONST_INT> Lexeme 1 found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT> 
1 -->  < main, ID> 
5 -->  < a, ID> 

Line no 3: TOKEN <SEMICOLON> Lexeme ; found

Line no 4: TOKEN <CHAR> Lexeme char found

Line no 4: TOKEN <ID> Lexeme ch found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID> 
1 -->  < main, ID> 
5 -->  < a, ID> 

Line no 4: TOKEN <ASSINOP> Lexeme = found

Line no 4: TOKEN <CHAR_CONST> Lexeme 'a' found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID> 
1 -->  < main, ID> 
5 -->  < a, ID> 
6 -->  < 'a', CHAR_CONST> 

Line no 4: TOKEN <SEMICOLON> Lexeme ; found

Line no 5: TOKEN <ID> Lexeme ch found

Line no 5: TOKEN <ASSINOP> Lexeme = found

Line no 5: TOKEN <CHAR_CONST> Lexeme '\t' found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID> 
6 -->  < 'a', CHAR_CONST> 

Line no 5: TOKEN <SEMICOLON> Lexeme ; found

Line no 6: TOKEN <CHAR> Lexeme char found

Line no 6: TOKEN <ID> Lexeme c found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID> 
6 -->  < 'a', CHAR_CONST>  < c, ID> 

Line no 6: TOKEN <LTHIRD> Lexeme [ found

Line no 6: TOKEN <RTHIRD> Lexeme ] found

Line no 6: TOKEN <ASSINOP> Lexeme = found

Line No. 6: Token <STRING> Lexeme "ab\td" found

Line no 6: TOKEN <SEMICOLON> Lexeme ; found

Line no 7: TOKEN <ID> Lexeme printf found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID>  < printf, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID> 
6 -->  < 'a', CHAR_CONST>  < c, ID> 

Line no 7: TOKEN <LPAREN> Lexeme ( found

Line No. 9: Token <STRING> Lexeme "abc\
def\
ghi" found

Line no 9: TOKEN <RPAREN> Lexeme ) found

Line no 9: TOKEN <SEMICOLON> Lexeme ; found

Line No. 10: Token <COMMENT> Lexeme // a comment found

Line No. 12: Token <COMMENT> Lexeme /** another
*** comment ***/ found

Line no 13: TOKEN <RETURN> Lexeme return found

Line no 13: TOKEN <CONST_INT> Lexeme 0 found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID>  < printf, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID>  < 0, CONST_INT> 
6 -->  < 'a', CHAR_CONST>  < c, ID> 

Line no 13: TOKEN <SEMICOLON> Lexeme ; found

Line no 14: TOKEN <RCURL> Lexeme } found

Error at line 15: Too many decimal point 1.2.345

Error at line 16: Ill formed number 1E10.7

Error at line 17: Invalid prefix on ID or invalid suffix on Number 12abcd

Error at line 18: Multi character constant error 'ab'

Error at line 19: Unterminated character 'a

Error at line 20: Unterminated character '

Error at line 21: Multi character constant error 'ab cd'

Error at line 22: Unterminated character '\'

Error at line 23: Empty character constant error '' 

Error at line 24: Unterminated string "abcd

Error at line 26: Unterminated string "abcd\
efgh

Line no 27: TOKEN <ID> Lexeme ijk found

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID>  < printf, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID>  < 0, CONST_INT> 
6 -->  < 'a', CHAR_CONST>  < c, ID>  < ijk, ID> 

Error at line 27: Unterminated string "


Error at line 28: Unterminated comment /**abc
def	

ScopeTable # 1
0 -->  < b, ID>  < 1, CONST_INT>  < ch, ID>  < printf, ID> 
1 -->  < main, ID> 
2 -->  < '\t', CHAR_CONST> 
5 -->  < a, ID>  < 0, CONST_INT> 
6 -->  < 'a', CHAR_CONST>  < c, ID>  < ijk, ID> 

Total Lines: 29
Total Errors: 13
